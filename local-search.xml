<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>RESTful 简介</title>
    <link href="undefined2020/01/10/node-kao-restfull-2020-01-10-restful-%E7%AE%80%E4%BB%8B/"/>
    <url>2020/01/10/node-kao-restfull-2020-01-10-restful-%E7%AE%80%E4%BB%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="REST"><a href="#REST" class="headerlink" title="REST"></a>REST</h2><blockquote><p>REST（英文：Representational State Transfer，简称 REST）描述了一个架构样式的网络系统，比如 web 应用程序。它首次出现在 2000 年 Roy Fielding 的博士论文中，Roy Fielding是 HTTP 规范的主要编写者之一。在目前主流的三种Web服务交互方案中，REST相比于SOAP（Simple Object Access protocol，简单对象访问协议）以及XML-RPC更加简单明了，无论是对URL的处理还是对Payload的编码，REST都倾向于用更加简单轻量的方法设计和实现。值得注意的是REST并没有一个明确的标准，而更像是一种设计的风格。</p></blockquote><h2 id="6-个限制"><a href="#6-个限制" class="headerlink" title="6 个限制"></a>6 个限制</h2><ol><li><p>客户-服务端（Client-Server/CS）</p><ul><li>关注点分离</li><li>服务端专注数据存储，提升了简单性</li><li>前端专注用户界面，提升了可移植性</li></ul></li><li><p>无状态</p><ul><li>所有用户会话信息都保存在客户端</li><li>每次请求必须包括所有信息，不能依赖上下文信息</li><li>服务端不需保存会话信息，提升了简单性、可靠性、可见性</li></ul></li><li><p>缓存（Cache）</p><ul><li>所有服务端相应都要被标位可缓存或不可缓存</li><li>减少前后端交互，提升了性能</li></ul></li><li><p>统一接口（Uniform Interface）</p><ul><li>接口设计尽可能统一通用，提升了简单性、可见性</li><li>接口与实现解耦，使前后端可以独立开发迭代</li></ul></li><li><p>分层系统（Layered System）</p><ul><li>每层只知道相邻的一层，后面隐藏的就不知道</li><li>客户端不知道是和代理还是真实服务器通信</li><li>其它层：安全层、负载均衡、缓存层等</li></ul></li><li><p>按需代码（Code-On-Demand 可选 / 按需）</p><ul><li>客户端可以下载运行服务器的代码（如 JS）</li><li>通过减少一些功能，简化客户端</li></ul></li></ol><h2 id="统一接口的限制"><a href="#统一接口的限制" class="headerlink" title="统一接口的限制"></a>统一接口的限制</h2><h3 id="资源的标识"><a href="#资源的标识" class="headerlink" title="资源的标识"></a>资源的标识</h3><ul><li>资源是任何可以命名的事物，如用户、评论</li><li>每个资源可以通过 URI 被唯一地标识</li></ul><h3 id="通过表述来操作资源"><a href="#通过表述来操作资源" class="headerlink" title="通过表述来操作资源"></a>通过表述来操作资源</h3><ul><li>表述就是 Representation，如JSON、XML等</li><li>客户端不能直接操作（如SQL）服务端资源</li><li>客户端应该通过表述来操作资源</li></ul><h3 id="自描述消息"><a href="#自描述消息" class="headerlink" title="自描述消息"></a>自描述消息</h3><ul><li>每个消息（请求或响应）必须提供足够的信息让接受者理解</li><li>媒体类型（application/json、application/xml）</li><li>HTTP 方法：GET POST DELETE等</li><li>缓存控制：Cache-Control</li></ul><h3 id="超媒体作为应用状态引擎"><a href="#超媒体作为应用状态引擎" class="headerlink" title="超媒体作为应用状态引擎"></a>超媒体作为应用状态引擎</h3><ul><li>超媒体：带文字的链接</li><li>应用状态：网页</li><li>引擎：驱动、跳转</li></ul><p>点击链接跳转到另一个网页</p><h2 id="RESTful-API-简介"><a href="#RESTful-API-简介" class="headerlink" title="RESTful API 简介"></a>RESTful API 简介</h2><p>符合 REST 架构风格的 API</p><h3 id="具体构成"><a href="#具体构成" class="headerlink" title="具体构成"></a>具体构成</h3><ol><li>基本的 URI</li><li>标准 HTTP 方法</li><li>传输的数据媒体类型</li></ol><p>示例</p><pre><code class="bash">PUT /user/12    # 更新 user = 12  DELETE /user/12     # 删除 user = 12</code></pre><h2 id="RESTful-设计最佳实践"><a href="#RESTful-设计最佳实践" class="headerlink" title="RESTful 设计最佳实践"></a>RESTful 设计最佳实践</h2><h3 id="请求设计规范"><a href="#请求设计规范" class="headerlink" title="请求设计规范"></a>请求设计规范</h3><ul><li>URI 使用名词</li><li>URI 使用嵌套表示关联关系</li><li>使用正确的 HTTP 方法</li></ul><h3 id="响应设计规范"><a href="#响应设计规范" class="headerlink" title="响应设计规范"></a>响应设计规范</h3><ul><li>查询</li><li>分页</li><li>字段过滤</li><li>状态码</li><li>错误处理</li></ul><h3 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h3><ul><li>HTTPS</li><li>鉴权</li><li>限流</li></ul><h3 id="开发者友好"><a href="#开发者友好" class="headerlink" title="开发者友好"></a>开发者友好</h3><ul><li>API 文档</li><li>超媒体</li></ul>]]></content>
    
    
    <categories>
      
      <category>Note</category>
      
      <category>Node</category>
      
      <category>Server</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Node</tag>
      
      <tag>RESTful</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web 安全 --- 重放攻击</title>
    <link href="undefined2020/01/06/web-%E5%AE%89%E5%85%A8-2020-01-06-Web-%E5%AE%89%E5%85%A8-%E9%87%8D%E6%94%BE%E6%94%BB%E5%87%BB/"/>
    <url>2020/01/06/web-%E5%AE%89%E5%85%A8-2020-01-06-Web-%E5%AE%89%E5%85%A8-%E9%87%8D%E6%94%BE%E6%94%BB%E5%87%BB/</url>
    
    <content type="html"><![CDATA[<blockquote><blockquote><blockquote><p>重放攻击(Replay Attacks)又称重播攻击、回放攻击，是指攻击者发送一个目的主机已接收过的包，来达到欺骗系统的目的，主要用于身份认证过程，破坏认证的正确性。重放攻击可以由发起者，也可以由拦截并重发该数据的敌方进行。攻击者利用网络监听或者其他方式盗取认证凭据，之后再把它重新发给认证服务器。重放攻击在任何网络通过程中都可能发生，是计算机世界黑客常用的攻击方式之一。</p></blockquote></blockquote></blockquote><h2 id="防疫"><a href="#防疫" class="headerlink" title="防疫"></a>防疫</h2><p>https<br>时间戳 — 跟踪请求时间<br>token(session)<br>nonce<br>签名（防止篡改）</p>]]></content>
    
    
    <categories>
      
      <category>Web 安全</category>
      
      <category>Note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web 安全</tag>
      
      <tag>重放攻击</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web 安全 --- DoS</title>
    <link href="undefined2020/01/05/web-%E5%AE%89%E5%85%A8-2020-01-05-Web-%E5%AE%89%E5%85%A8-DOS/"/>
    <url>2020/01/05/web-%E5%AE%89%E5%85%A8-2020-01-05-Web-%E5%AE%89%E5%85%A8-DOS/</url>
    
    <content type="html"><![CDATA[<p>DoS是Denial of Service的简称，即拒绝服务，造成DoS的攻击行为被称为DoS攻击，其目的是使计算机或网络无法提供正常的服务。最常见的DoS攻击有计算机网络宽带攻击和连通性攻击。</p><p>模拟正常用户，大量占用服务资源，无法服务正常用户</p><h2 id="方式"><a href="#方式" class="headerlink" title="方式"></a>方式</h2><ul><li>TCP 半连接</li><li>http 连接</li><li>NDS</li></ul><h2 id="DDoS-–-大规模分布式DoS"><a href="#DDoS-–-大规模分布式DoS" class="headerlink" title="DDoS – 大规模分布式DoS"></a>DDoS – 大规模分布式DoS</h2><ul><li>流量可达几十到百G</li><li>分布式</li><li>极难防御</li></ul><h2 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h2><ul><li>防火墙</li><li>交换机、路由器</li><li>流量清洗</li><li>高防IP</li></ul><h2 id="预防"><a href="#预防" class="headerlink" title="预防"></a>预防</h2><ul><li>避免重逻辑业务</li><li>快速失败快速返回</li><li>防雪崩机制</li></ul>]]></content>
    
    
    <categories>
      
      <category>Web 安全</category>
      
      <category>Note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web 安全</tag>
      
      <tag>DOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web 安全 --- 信息泄露</title>
    <link href="undefined2019/12/21/web-%E5%AE%89%E5%85%A8-2019-12-21-Web-%E5%AE%89%E5%85%A8-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    <url>2019/12/21/web-%E5%AE%89%E5%85%A8-2019-12-21-Web-%E5%AE%89%E5%85%A8-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h2><h3 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h3><ul><li>泄露系统敏感信息</li><li>泄露用户敏感信息</li><li>泄露用户密码</li></ul><h3 id="途径"><a href="#途径" class="headerlink" title="途径"></a>途径</h3><ul><li>错误信息失控</li><li>SQL注入</li><li>水平权限控制不当（横向越权）</li><li>XSS/CSRF</li><li>…</li></ul><h2 id="OAuth"><a href="#OAuth" class="headerlink" title="OAuth"></a>OAuth</h2><ul><li>一切行为有用户授权</li><li>授权行为不泄露敏感信息</li><li>授权会过期</li></ul><img src="/notes/2019/12/21/web-安全-2019-12-21-Web-安全-信息泄露/oauth.jpg" srcset="/img/loading.gif">]]></content>
    
    
    <categories>
      
      <category>Web 安全</category>
      
      <category>Note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web 安全</tag>
      
      <tag>社会工程学</tag>
      
      <tag>信息泄露</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>web 安全 --- 上传文件</title>
    <link href="undefined2019/12/20/web-%E5%AE%89%E5%85%A8-2019-12-20-web-%E5%AE%89%E5%85%A8-%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/"/>
    <url>2019/12/20/web-%E5%AE%89%E5%85%A8-2019-12-20-web-%E5%AE%89%E5%85%A8-%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>上传文件被当做程序执行</p><h2 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h2><ol><li>限制文件后缀</li><li>文件类型检查</li><li>文件内容检查（文件头）</li><li>读取文件在输出（有性能问题）</li><li>权限控制 - 可写可执行互斥</li></ol>]]></content>
    
    
    <categories>
      
      <category>Web 安全</category>
      
      <category>Note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web 安全</tag>
      
      <tag>上传文件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>web 安全 --- 接入层注入</title>
    <link href="undefined2019/12/19/web-%E5%AE%89%E5%85%A8-2019-12-19-web-%E5%AE%89%E5%85%A8-%E6%8E%A5%E5%85%A5%E5%B1%82%E6%B3%A8%E5%85%A5/"/>
    <url>2019/12/19/web-%E5%AE%89%E5%85%A8-2019-12-19-web-%E5%AE%89%E5%85%A8-%E6%8E%A5%E5%85%A5%E5%B1%82%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h2 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a>关系型数据库</h2><ul><li>存放结构化数据</li><li>可高效操作大量数据</li><li>方便处理数据间关联关系</li><li>access/sqlite/mysql/mssql/oracle</li></ul><h2 id="SQL-注入"><a href="#SQL-注入" class="headerlink" title="SQL 注入"></a>SQL 注入</h2><h2 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h2><ul><li>猜解密码</li><li>获取数据</li><li>删库删表</li><li>拖库</li></ul><h2 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h2><ul><li>关闭错误输出</li><li>输入校验（数据类型）</li><li>数据进行转义</li><li>参数化查询</li><li>使用 ORM （对象关系映射）</li></ul><h2 id="NoSQL-注入和防御"><a href="#NoSQL-注入和防御" class="headerlink" title="NoSQL 注入和防御"></a>NoSQL 注入和防御</h2><ul><li>检测数据类型</li><li>类型转换</li><li>代码写完整的查询条件</li></ul>]]></content>
    
    
    <categories>
      
      <category>Web 安全</category>
      
      <category>Note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web 安全</tag>
      
      <tag>接入层注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>web 安全 --- 密码安全</title>
    <link href="undefined2019/12/18/web-%E5%AE%89%E5%85%A8-2019-12-18-web-%E5%AE%89%E5%85%A8-%E5%AF%86%E7%A0%81%E5%AE%89%E5%85%A8/"/>
    <url>2019/12/18/web-%E5%AE%89%E5%85%A8-2019-12-18-web-%E5%AE%89%E5%85%A8-%E5%AF%86%E7%A0%81%E5%AE%89%E5%85%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>身份证明</p><h2 id="储存"><a href="#储存" class="headerlink" title="储存"></a>储存</h2><p>储存在数据库</p><h3 id="泄露渠道"><a href="#泄露渠道" class="headerlink" title="泄露渠道"></a>泄露渠道</h3><p>数据库被攻入<br>服务器入侵<br>通讯窃听<br>内部人员泄露<br>其他网站（撞库）</p><h3 id="hash-算法"><a href="#hash-算法" class="headerlink" title="hash 算法"></a>hash 算法</h3><p>雪崩效应<br>加密存储<br>非对称加密<br>复杂度要求<br>加盐</p><h2 id="传输"><a href="#传输" class="headerlink" title="传输"></a>传输</h2><p>https<br>登录频率（暴力破解）<br>前端加密（意义有限）</p><h2 id="替代方案"><a href="#替代方案" class="headerlink" title="替代方案"></a>替代方案</h2><h3 id="生物特征密码"><a href="#生物特征密码" class="headerlink" title="生物特征密码"></a>生物特征密码</h3><p>指纹<br>声纹<br>虹膜<br>人脸</p><p>– 缺陷</p><ol><li>私密性 – 容易泄露</li><li>安全性 – 碰撞</li><li>唯一性 – 无法修改</li></ol>]]></content>
    
    
    <categories>
      
      <category>Web 安全</category>
      
      <category>Note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web 安全</tag>
      
      <tag>密码安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web 安全 --- 传输安全</title>
    <link href="undefined2019/11/08/web-%E5%AE%89%E5%85%A8-2019-11-08-web-%E5%AE%89%E5%85%A8-%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8/"/>
    <url>2019/11/08/web-%E5%AE%89%E5%85%A8-2019-11-08-web-%E5%AE%89%E5%85%A8-%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="Http-窃听"><a href="#Http-窃听" class="headerlink" title="Http 窃听"></a>Http 窃听</h2><p>获取用户数据，可能包括用户名、密码</p><h2 id="Http-篡改"><a href="#Http-篡改" class="headerlink" title="Http 篡改"></a>Http 篡改</h2><ol><li>插入广告</li><li>重定向网站</li><li>植入脚本</li><li>无法防御 XSS 和 CRSF 攻击</li></ol><h2 id="Https"><a href="#Https" class="headerlink" title="Https"></a>Https</h2><p>通过 TLS(SSL) 加密传输数据，保证传输安全</p><p>通过证书确认服务器身份，防止中间人攻击</p><ol><li>证书不能伪造</li><li>证书私钥不能揭露</li><li>域名管理权不能泄露</li><li>CA 监管</li></ol><p><strong>证书由 <code>CA</code> 提供</strong></p><!--[证书申请](www.sslforfres.com)-->]]></content>
    
    
    <categories>
      
      <category>Web 安全</category>
      
      <category>Note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web 安全</tag>
      
      <tag>传输安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web 安全 --- 点击劫持</title>
    <link href="undefined2019/11/08/web-%E5%AE%89%E5%85%A8-2019-11-08-web-%E5%AE%89%E5%85%A8-%E7%82%B9%E5%87%BB%E5%8A%AB%E6%8C%81/"/>
    <url>2019/11/08/web-%E5%AE%89%E5%85%A8-2019-11-08-web-%E5%AE%89%E5%85%A8-%E7%82%B9%E5%87%BB%E5%8A%AB%E6%8C%81/</url>
    
    <content type="html"><![CDATA[<p>通过用户点击，在用户不知情的情况下，发起操作</p><p>将目标网站嵌入到 iframe 中，设置透明度为零，伪造一个界面，诱导用户操作</p><h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><ol><li>用户亲自操作</li><li>用户不知情</li></ol><h2 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h2><ol><li>X-Frame-Options 禁止内嵌或有限内嵌</li><li>JavaScript 防止内嵌</li><li>验证码等辅助手段</li></ol>]]></content>
    
    
    <categories>
      
      <category>Web 安全</category>
      
      <category>Note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web 安全</tag>
      
      <tag>点击劫持</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web 安全 --- Cookies</title>
    <link href="undefined2019/11/07/web-%E5%AE%89%E5%85%A8-2019-11-07-web-%E5%AE%89%E5%85%A8-Cookies/"/>
    <url>2019/11/07/web-%E5%AE%89%E5%85%A8-2019-11-07-web-%E5%AE%89%E5%85%A8-Cookies/</url>
    
    <content type="html"><![CDATA[<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ol><li>浏览器数据存储</li><li>服务端可通过 http 头设置</li><li>请求时通过 http 头传递</li><li>前端可读写 (<code>http-noly</code>不能读取)</li><li>同源策略</li></ol><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><ol><li>name</li><li>value</li><li>domain</li><li>expires</li><li>path</li><li>http-only</li><li>secure</li><li>same-site</li></ol><p><strong>通过设置 <code>cookie</code> 的有效期来删除</strong></p><h2 id="登录用户凭证"><a href="#登录用户凭证" class="headerlink" title="登录用户凭证"></a>登录用户凭证</h2><ol><li>用户ID + 签名</li><li>SessionId</li></ol><h2 id="与-XSS"><a href="#与-XSS" class="headerlink" title="与 XSS"></a>与 XSS</h2><p>XSS 可能盗取 cookies, 冒充用户身份, 设置 <code>http-only</code> 看防御</p><h2 id="与-CSRF"><a href="#与-CSRF" class="headerlink" title="与 CSRF"></a>与 CSRF</h2><p>利用 cookies 发起请求, 无法读写 cookies</p><h2 id="安全策略"><a href="#安全策略" class="headerlink" title="安全策略"></a>安全策略</h2><ol><li>签名防篡改</li><li>加密</li><li>http-only (防止 XSS)</li><li>secure</li><li>same-site (防止 CSRF)</li></ol>]]></content>
    
    
    <categories>
      
      <category>Web 安全</category>
      
      <category>Note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web 安全</tag>
      
      <tag>Cookies</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web 安全 --- CSRF</title>
    <link href="undefined2019/11/07/web-%E5%AE%89%E5%85%A8-2019-11-07-web-%E5%AE%89%E5%85%A8-CSRF/"/>
    <url>2019/11/07/web-%E5%AE%89%E5%85%A8-2019-11-07-web-%E5%AE%89%E5%85%A8-CSRF/</url>
    
    <content type="html"><![CDATA[<p>Cross Site Request Forgy — 跨站请求伪造</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><img src="/notes/2019/11/07/web-安全-2019-11-07-web-安全-CSRF/csrf.jpg" srcset="/img/loading.gif"><h2 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h2><p>用户在不知情的情况下，通过自己的身份提交请求，而被攻击者利用甚至获利</p><h2 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h2><ol><li>禁止三方网站携带本站 cookies，cookies 配置 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#SameSite_cookies" target="_blank" rel="noopener"><code>same-site</code></a> 属性，新浏览器才有特性</li><li>验证码，有效，用户体验不好</li><li>token，解决验证码体验不好问题，不过效果不如验证码</li><li>校验 referer，部分浏览器可以不携带或者更改referer</li></ol>]]></content>
    
    
    <categories>
      
      <category>Web 安全</category>
      
      <category>Note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web 安全</tag>
      
      <tag>CSRF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web 安全 --- XSS</title>
    <link href="undefined2019/11/05/web-%E5%AE%89%E5%85%A8-2019-11-05-web-%E5%AE%89%E5%85%A8-XSS/"/>
    <url>2019/11/05/web-%E5%AE%89%E5%85%A8-2019-11-05-web-%E5%AE%89%E5%85%A8-XSS/</url>
    
    <content type="html"><![CDATA[<p>Cross Site Scripting — 跨站脚本攻击</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>在页面植入脚本</p><h2 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h2><ol><li>获取用户数据</li><li>冒充用户身份</li></ol><h2 id="类型-根据攻击来源"><a href="#类型-根据攻击来源" class="headerlink" title="类型 (根据攻击来源)"></a>类型 (根据攻击来源)</h2><ol><li>反射型: url 参数直接注入</li><li>储存型: 储存到DB后，读取时注入，危害更大</li></ol><h2 id="攻击点"><a href="#攻击点" class="headerlink" title="攻击点"></a>攻击点</h2><h3 id="HTML-内容节点"><a href="#HTML-内容节点" class="headerlink" title="HTML 内容节点"></a>HTML 内容节点</h3><pre><code class="javascript">const content = `&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;`div.innerHTML = content</code></pre><h3 id="HTML-属性"><a href="#HTML-属性" class="headerlink" title="HTML 属性"></a>HTML 属性</h3><pre><code class="javascript">&lt;img src=&quot;/404&quot; onerror=&quot;alert(&#39;xss&#39;)&quot;&gt;</code></pre><h3 id="JavaScript-代码"><a href="#JavaScript-代码" class="headerlink" title="JavaScript 代码"></a>JavaScript 代码</h3><pre><code class="javascript">// 模板let tpl = &#39;#{data}&#39;let data = &#39;hello&quot;;alert(&quot;xss&quot;);&quot;&#39;// outputlet data = &quot;hello&quot;;alert(&#39;xss&#39;);&quot;&quot;</code></pre><h3 id="富文本"><a href="#富文本" class="headerlink" title="富文本"></a>富文本</h3><h2 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h2><h3 id="X-XSS-Protextion"><a href="#X-XSS-Protextion" class="headerlink" title="X-XSS-Protextion"></a>X-XSS-Protextion</h3><p>浏览器内置防御机制，通过相应头开启，作用有限</p><h3 id="转义写入内容"><a href="#转义写入内容" class="headerlink" title="转义写入内容"></a>转义写入内容</h3><p>将写 html 内容和属性的值进行转义, 针对提交的值, 在写入数据库前进行转义</p><ol><li><code>&amp;</code> 符号（放在最前面）</li><li>左右尖括号</li><li>单双引号</li><li>通过模本写入js的中的值执行 <code>JSON.stringify</code> 进行转义</li><li>避免通过模板输出js</li></ol><h3 id="富文本防御"><a href="#富文本防御" class="headerlink" title="富文本防御"></a>富文本防御</h3><p>黑名单</p><ol><li>校验 <code>script</code> 标签</li><li>校验 <code>javascript:</code></li><li><code>onerror</code> 和 <code>onload</code></li></ol><p>白名单</p><h3 id="js-xss-工具"><a href="#js-xss-工具" class="headerlink" title="js-xss 工具"></a>js-xss 工具</h3><p><a href="https://github.com/leizongmin/js-xss">leizongmin/js-xss</a></p><h3 id="CSP"><a href="#CSP" class="headerlink" title="CSP"></a>CSP</h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Security-Policy" target="_blank" rel="noopener">Content Security Policy</a> — 内容安全策略</p><img src="/notes/2019/11/05/web-安全-2019-11-05-web-安全-XSS/csp.jpg" srcset="/img/loading.gif">]]></content>
    
    
    <categories>
      
      <category>Web 安全</category>
      
      <category>Note</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web 安全</tag>
      
      <tag>XSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>